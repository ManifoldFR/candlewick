#pragma clang diagnostic ignored "-Wmissing-prototypes"

#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct TranformBlock
{
    float4x4 model;
    float4x4 viewProj;
};

struct main0_out
{
    float4 pointColor [[user(locn0)]];
    float4 gl_Position [[position]];
    float gl_PointSize [[point_size]];
};

struct main0_in
{
    float3 position [[attribute(0)]];
    float4 color [[attribute(1)]];
};

static inline __attribute__((always_inline))
float3 uncharted2ToneMapping_Partial(thread const float3& color)
{
    float A = 0.1500000059604644775390625;
    float B = 0.5;
    float C = 0.100000001490116119384765625;
    float D = 0.20000000298023223876953125;
    float E = 0.0199999995529651641845703125;
    float F = 0.300000011920928955078125;
    return (((color * ((color * A) + float3(C * B))) + float3(D * E)) / ((color * ((color * A) + float3(B))) + float3(D * F))) - float3(E / F);
}

static inline __attribute__((always_inline))
float3 uncharted2ToneMapping(thread const float3& color)
{
    float exposure_bias = 2.0;
    float3 param = color * exposure_bias;
    float3 curr = uncharted2ToneMapping_Partial(param);
    float3 W = float3(11.19999980926513671875);
    float3 param_1 = W;
    float3 white_scale = float3(1.0) / uncharted2ToneMapping_Partial(param_1);
    return curr * white_scale;
}

vertex main0_out main0(main0_in in [[stage_in]], constant TranformBlock& transform [[buffer(0)]])
{
    main0_out out = {};
    out.gl_Position = (transform.viewProj * transform.model) * float4(in.position, 1.0);
    out.gl_PointSize = 5.0;
    float3 param = in.color.xyz;
    float3 _127 = uncharted2ToneMapping(param);
    out.pointColor.x = _127.x;
    out.pointColor.y = _127.y;
    out.pointColor.z = _127.z;
    out.pointColor.w = 1.0;
    return out;
}
