#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct TranformBlock
{
    float4x4 modelView;
    float4x4 mvp;
    float3x3 normalMatrix;
};

struct main0_out
{
    float3 fragViewPos [[user(locn0)]];
    float3 fragViewNormal [[user(locn1)]];
    float4 gl_Position [[position]];
};

struct main0_in
{
    float3 inPosition [[attribute(0)]];
    float3 inNormal [[attribute(1)]];
};

vertex main0_out main0(main0_in in [[stage_in]], constant TranformBlock& _15 [[buffer(0)]])
{
    main0_out out = {};
    out.fragViewPos = float3((_15.modelView * float4(in.inPosition, 1.0)).xyz);
    out.fragViewNormal = fast::normalize(_15.normalMatrix * in.inNormal);
    out.gl_Position = _15.mvp * float4(in.inPosition, 1.0);
    return out;
}
